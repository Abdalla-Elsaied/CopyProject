@using DAL
@model IEnumerable<AdminVM>
@{
    ViewData["Title"] = "Index";
}




<h1>All admin</h1>
<br />
<br />
<a asp-controller="Admin" asp-action="Create" class="btn btn-primary">Create New admin</a>
<div class="row justify-content-center align-items-center mt-5">
    <form asp-action="Index" class="row col-8 offset-1">
        <div class="col-8">
            <input type="text" class="form-control" name="searchInp" id="searchInp" placeholder="Search By Name" />
        </div>
        <div class="col-4">
            <input type="submit" value="Search" class="btn btn-success" />
        </div>
    </form>
</div>

@if (Model.Count() > 0)
{
    <table class="table table-striped table-hover mt-4">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(D => D.Name)</th>
                
                <th>@Html.DisplayNameFor(D => D.Email)</th>
                <th>@Html.DisplayNameFor(D => D.Password)</th>
                <th>Details</th>
                <th>Update</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var company in Model)
            {
                <tr>
                    <td>@company.Name</td>
                    
                    <td>@Html.DisplayFor(M => company.Email)</td>
                    <td>@Html.DisplayFor(M => company.Password)</td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="mt-4 alert alert-warning">
        <h3>There is No Company</h3>
    </div>
}

